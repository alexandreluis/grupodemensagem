/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.alr.grupodemensagem.view;

import br.com.alr.grupodemensagem.services.ClienteServices;
import br.com.alr.grupodemensagem.services.ServicesFactory;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import br.com.alr.grupodemensagem.model.Cliente;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.TableModel;
//import static tlivrariaoojf.TLivrariaOOJF.cadClientes;

/**
 *
 * @author jairb
 */
public class jfCliente extends javax.swing.JFrame
{

    /**
     * Creates new form jfCliente
     */
    public jfCliente()
    {
        initComponents();
        addRowToTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        bgCpfCnpj = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jrbCpf = new javax.swing.JRadioButton();
        jrbCnpj = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtfNomeCliente = new javax.swing.JTextField();
        jtfCpfCnpj = new javax.swing.JTextField();
        jtfEndereco = new javax.swing.JTextField();
        jtfTelefone = new javax.swing.JTextField();
        jbLimpar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtClientes = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jtfEmail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtfSenha = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Nome Cliente:");

        bgCpfCnpj.add(jrbCpf);
        jrbCpf.setText("CPF");
        jrbCpf.setToolTipText("");

        bgCpfCnpj.add(jrbCnpj);
        jrbCnpj.setText("CNPJ");

        jLabel4.setText("Endereço:");

        jLabel5.setText("Telefone:");

        jtfNomeCliente.setToolTipText("");

        jbLimpar.setText("Limpar");
        jbLimpar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jbLimparActionPerformed(evt);
            }
        });

        jbCancelar.setText("Atualizar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jbCancelarActionPerformed(evt);
            }
        });

        jtClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Id", "Email", "Senha", "Nome", "CPF", "CNPJ", "Endereço", "Telefone"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }
        });
        jtClientes.setToolTipText("");
        jtClientes.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jtClientesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtClientes);
        jtClientes.getAccessibleContext().setAccessibleName("");

        jLabel1.setText("Controle de Clientes");

        jButton1.setText("Encerrar Conta");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Email: ");

        jLabel6.setText("Senha: ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jSeparator1)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jbLimpar)
                        .addGap(18, 18, 18)
                        .addComponent(jbCancelar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jrbCpf)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbCnpj))
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6))
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfNomeCliente)
                            .addComponent(jtfEndereco)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jtfCpfCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addGap(16, 16, 16)
                                .addComponent(jtfTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jtfEmail)
                            .addComponent(jtfSenha))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(13, 13, 13)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jtfNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jrbCpf)
                            .addComponent(jrbCnpj)
                            .addComponent(jtfCpfCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jtfTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jtfEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jtfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6))
                    .addComponent(jtfSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbCancelar)
                    .addComponent(jbLimpar)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtfNomeCliente.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pegaDadosDaTabela()
    {
        int totalRows = jtClientes.getRowCount();
        System.out.println("totalRows " + totalRows);
        //jtClientes.getValueAt(0, NORMAL)
        //System.out.println(" " + jtClientes.getSelectedIndex());
    }

    private void jTable1MousePressed(java.awt.event.MouseEvent evt)
    {

        int selectedRow = 0;

        ListSelectionModel rowSM = jtClientes.getSelectionModel();

        rowSM.addListSelectionListener(new ListSelectionListener()
        {
            @Override
            public void valueChanged(ListSelectionEvent e)
            {
                ListSelectionModel lsm = (ListSelectionModel) e.getSource();

                //selectedRow = lsm.getMinSelectionIndex();
                int numCols = jtClientes.getColumnCount();
                System.out.println("numCols " + numCols);

                DefaultTableModel model = (DefaultTableModel) jtClientes.getModel();

                System.out.print(" \n row " + selectedRow + ":");

                for (int j = 0; j < numCols; j++)
                {
                    System.out.print(" " + model.getValueAt(selectedRow, j));
                }

            }
        });
    }
    private void jbLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimparActionPerformed
        // TODO add your handling code here:
        jtfNomeCliente.setText("");
        jtfCpfCnpj.setText("");
        jtfEndereco.setText("");
        jtfTelefone.setText("");
        bgCpfCnpj.clearSelection();
        jtfNomeCliente.requestFocus();
    }//GEN-LAST:event_jbLimparActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed

        try
        {
            ClienteServices clienteServices = ServicesFactory.getClienteServices();

            Cliente cli = new Cliente();
            cli.setNomeCliente(jtfNomeCliente.getText());
            cli.setTelefone(jtfTelefone.getText());
            cli.setEndereco(jtfEndereco.getText());
            cli.setEmail(jtfEmail.getText());
            cli.setPassword(jtfSenha.getText());

            boolean doc = false;
            int tPessoa = 0;

            if (!jrbCpf.isSelected() || !jrbCnpj.isSelected())
            {
                JOptionPane.showMessageDialog(this, "Selecione CPF ou CNPJ.");
            }

            Cliente cliCpfCnpj;
            cliCpfCnpj = clienteServices.getByDoc(jtfCpfCnpj.getText());

            if ((jrbCpf.isSelected()) && (cliCpfCnpj.getCpf() == null))
            {
                cli.setCpf(jtfCpfCnpj.getText());
                cli.setCnpj(null);
                doc = false;
            } else if ((jrbCnpj.isSelected()) && (cliCpfCnpj.getCnpj() == null))
            {
                cli.setCpf(null);
                cli.setCnpj(jtfCpfCnpj.getText());
                doc = false;
            }

            //Integer nCPFCNJ = cliCpfCnpj.getIdCliente(); 
            if ((cliCpfCnpj == null) == true)
            {
                JOptionPane.showMessageDialog(this, "Este documento já existe!"
                        + "\nTente novamente!!!");
                doc = true;
            }

            if ((jrbCpf.isSelected() || jrbCnpj.isSelected()) && !doc && !jtfNomeCliente.getText().isEmpty() && !jtfCpfCnpj.getText().isEmpty())
            {
                clienteServices.updateFieldsOfClient(cli);
                addRowToTable();
                jbLimpar.doClick();
                JOptionPane.showMessageDialog(this, cli.getNomeCliente() + " cadastrado com sucesso!");
            } else
            {
                JOptionPane.showMessageDialog(this, "Cadastro incompleto.");
            }
        } catch (SQLException ex)
        {
            ex.printStackTrace();
        }

        //jfCliente.this.dispose();// fecha janela
    }//GEN-LAST:event_jbCancelarActionPerformed

    public void addRowToTable()
    {
        try
        {
            ClienteServices clienteServices = ServicesFactory.getClienteServices();

            DefaultTableModel model = (DefaultTableModel) jtClientes.getModel();
            model.getDataVector().removeAllElements();
            model.fireTableDataChanged();
            Object rowData[] = new Object[8];

            for (Cliente listCli : clienteServices.getAll())
            {
                rowData[0] = listCli.getIdCliente();
                rowData[1] = listCli.getEmail();
                rowData[2] = listCli.getPassword();
                rowData[3] = listCli.getNomeCliente();
                rowData[4] = listCli.getCpf();
                rowData[5] = listCli.getCnpj();
                rowData[6] = listCli.getEndereco();
                rowData[7] = listCli.getTelefone();
                model.addRow(rowData);
            }
        } catch (SQLException ex)
        {
            JOptionPane.showInputDialog("Clientes não existem.");
        }
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try
        {
            ClienteServices clienteServices = ServicesFactory.getClienteServices();

            Cliente cliente;
            cliente = clienteServices.getByDoc(jtfCpfCnpj.getText());

            Boolean deletou = clienteServices.deleteOneClient(cliente.getIdCliente());

            if (deletou == true)
            {
                JOptionPane.showMessageDialog(this, cliente.getNomeCliente() + " foi excluído do cadastro.");
            }
            addRowToTable();
        } catch (SQLException ex)
        {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jtClientesMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jtClientesMouseClicked
    {//GEN-HEADEREND:event_jtClientesMouseClicked
        try
        {
            //
            int column = 0;
            int row = jtClientes.getSelectedRow();

            TableModel model = jtClientes.getModel();
            int idClient = Integer.parseInt(model.getValueAt(row, column).toString());

            ClienteServices clienteServices = ServicesFactory.getClienteServices();

            Cliente clienteObjeto;
            clienteObjeto = clienteServices.getById(idClient);

            jtfNomeCliente.setText(clienteObjeto.getNomeCliente());

            if (clienteObjeto.getCnpj().equals(""))
            {
                jtfCpfCnpj.setText(clienteObjeto.getCpf());
            } else
            {
                jtfCpfCnpj.setText(clienteObjeto.getCnpj());
            }

            jtfTelefone.setText(clienteObjeto.getTelefone());
            jtfEndereco.setText(clienteObjeto.getEndereco());
            jtfEmail.setText(clienteObjeto.getEmail());
            jtfSenha.setText(clienteObjeto.getPassword());
        } catch (SQLException ex)
        {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jtClientesMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(jfCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(jfCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(jfCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(jfCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new jfCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgCpfCnpj;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbLimpar;
    private javax.swing.JRadioButton jrbCnpj;
    private javax.swing.JRadioButton jrbCpf;
    private javax.swing.JTable jtClientes;
    private javax.swing.JTextField jtfCpfCnpj;
    private javax.swing.JTextField jtfEmail;
    private javax.swing.JTextField jtfEndereco;
    private javax.swing.JTextField jtfNomeCliente;
    private javax.swing.JTextField jtfSenha;
    private javax.swing.JTextField jtfTelefone;
    // End of variables declaration//GEN-END:variables

}
